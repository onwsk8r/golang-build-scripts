image: golang:1.11

# https://docs.gitlab.com/ce/ci/variables/
variables:
  GIT_DEPTH: 3 # --depth 3
  GIT_STRATEGY: fetch # fetch vs clone
  GIT_SUBMODULE_STRATEGY: recursive
  RESTORE_CACHE_ATTEMPTS: 3
  USE_GOPATH: 'true'
  GBS: 'relative/path/to/this/folder'

# The yml files included below assume these stages
stages:
  - build
  - test

# Make sure to update these paths to include the path to the submodule
# (eg '/gitlab-ci/global.yml' => '/dev/gitlab-ci/global.yml' if this repo
# has been cloned into the dev folder of your repo)
include:
  # You can also include by URL
  # - 'https://github.com/onwsk8r/golang-build-scripts/gitlab-ci/global.yml'
  - '/gitlab-ci/gomod.yml'
  - '/gitlab-ci/test.yml'

# By defining these globally, if the cache is not available for some reason,
# the job will try to build it instead of just failing because it's not available.
cache: *build_cache # Cache the vendor directory
before_script: *build # Run `make vendor`

# Build pre-builds the cache in the before_script
build:
  stage: build
  script:
    - echo "Build successful"
  retry: 1

# These next two jobs both run in the test stage, as defined by the
# jobs they implement. These jobs are implemented directly because
# they did not need to be modified in any way.
test:
  extends: .test_test

lint:
  extends: .test_lint
